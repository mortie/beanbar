# Makefile generated by smake.

SRCS = src/bar.c src/ipc.c src/json.c src/main.c
HDRS = src/bar.h src/ipc.h src/json.h src/log.h
OBJS = $(patsubst src/%,$(BUILD)/obj/%.o,$(SRCS))
DEPS = $(patsubst src/%,$(BUILD)/dep/%.d,$(SRCS))
PUBLICHDRS = 

# Defaults
PKGS =
TARGET = beanbar
VERSION = unknown
PROJTYPE = exe
EXTRADEPS = beanbar-stats/src/io.c beanbar-stats/src/ipc.c beanbar-stats/src/main.c beanbar-stats/src/providers/audio.c beanbar-stats/src/providers/i3workspaces.c beanbar-stats/src/providers/network.c beanbar-stats/src/providers/processor.c beanbar-stats/src/io.h beanbar-stats/src/ipc.h beanbar-stats/src/providers/providers.h
EXTRAPUBLICDEPS = 
CONFIG ?= release
BUILDDIR ?= build
BUILD ?= $(BUILDDIR)/$(CONFIG)
WARNINGS = -Wall -Wextra -Wno-unused-parameter
SMAKEFILE ?= Smakefile
DESTDIR ?=
PREFIX ?= /usr/local
PHONIES = dumpdeps dumppublicdeps dumpprojtype clean distclean

PKG_CONFIG ?= pkg-config
AR ?= ar

CCOPTS = -Iinclude
CCOPTS_release = -O2 -flto
CCOPTS_debug = -g
CCOPTS_sanitize = -fsanitize=address -fsanitize=undefined $(CCOPTS_debug)

LDOPTS = 
LDOPTS_release = -flto
LDOPTS_debug =
LDOPTS_sanitize = -fsanitize=address -fsanitize=undefined $(LDOPTS_debug)

runpfx = @echo $(1) $(2) && $(2)

.PHONY: all
all: $(BUILD)/$(TARGET)

-include $(SMAKEFILE)

CFLAGS += $(CCOPTS_$(CONFIG)) $(CCOPTS) $(WARNINGS)
CXXFLAGS += $(CCOPTS_$(CONFIG)) $(CCOPTS) $(WARNINGS)
LDFLAGS += $(LDOPTS_$(CONFIG)) $(LDOPTS)

ifneq ($(PKGS),)
CFLAGS += $(shell $(PKG_CONFIG) --cflags $(PKGS))
CXXFLAGS += $(shell $(PKG_CONFIG) --cflags $(PKGS))
LDFLAGS += $(shell $(PKG_CONFIG) --libs $(PKGS))
endif

$(BUILD)/$(TARGET): beanbar-stats/build/$(CONFIG)/.built $(OBJS)
	@mkdir -p $(@D)
	$(call runpfx,'(LD)',$(CC) -o $@ $(OBJS) $(LDFLAGS))
	touch $(BUILD)/.built
	@echo Created $@.
$(TARGET): $(BUILD)/$(TARGET)
	cp $< $@
	@echo Created $@.

beanbar-stats/build/$(CONFIG)/.built: beanbar-stats/src/io.c beanbar-stats/src/ipc.c beanbar-stats/src/main.c beanbar-stats/src/providers/audio.c beanbar-stats/src/providers/i3workspaces.c beanbar-stats/src/providers/network.c beanbar-stats/src/providers/processor.c beanbar-stats/src/io.h beanbar-stats/src/ipc.h beanbar-stats/src/providers/providers.h
	$(call runpfx,'(SUB)',$(MAKE) -C beanbar-stats)

$(BUILD)/obj/%.c.o: src/%.c $(EXTRAPUBLICDEPS)
	@mkdir -p $(@D)
	$(call runpfx,'(CC)',$(CC) -o $@ -c $< $(CFLAGS))
$(BUILD)/obj/%.cc.o: src/%.cc $(EXTRAPUBLICDEPS)
	@mkdir -p $(@D)
	$(call runpfx,'(CXX)',$(CXX) -o $@ -c $< $(CXXFLAGS))

$(BUILD)/dep/%.c.d: src/%.c $(HDRS)
	@mkdir -p $(@D)
	$(call runpfx,'(DEP)',$(CC) -o $@ -MM $< -MT $(patsubst src/%,$(BUILD)/obj/%.o,$<) $(CFLAGS))
$(BUILD)/dep/%.cc.d: src/%.cc $(HDRS)
	@mkdir -p $(@D)
	$(call runpfx,'(DEP)',$(CXX) -o $@ -MM $< -MT $(patsubst src/%,$(BUILD)/obj/%.o,$<) $(CXXFLAGS))

.PHONY: install
install: $(BUILD)/$(TARGET)
	mkdir -p $(DESTDIR)$(PREFIX)/bin
	cp -f $^ $(DESTDIR)$(PREFIX)/bin
	chmod 755 $(DESTDIR)$(PREFIX)/bin/$(TARGET)
	$(MAKE) -C beanbar-stats install

.PHONY: uninstall
uninstall:
	rm -f $(DESTDIR)$(PREFIX)/bin/$(TARGET)
	$(MAKE) -C beanbar-stats uninstall

.PHONY: clean
clean:
	rm -rf $(TARGET) $(BUILD)
	$(MAKE) -C beanbar-stats clean

.PHONY: distclean
distclean:
	rm -rf $(BUILDDIR)
	$(MAKE) -C beanbar-stats distclean

.PHONY: dumpdeps
dumpdeps:
	@echo $(addprefix $(PREPEND),$(SRCS) $(HDRS) $(EXTRADEPS))

.PHONY: dumppublicdeps
dumppublicdeps:
	@echo $(addprefix $(PREPEND),$(PUBLICHDRS) $(EXTRAPUBLICDEPS))

.PHONY: dumpprojtype
dumpprojtype:
	@echo $(PROJTYPE)

ifeq ($(filter $(PHONIES),$(MAKECMDGOALS)),)
-include $(DEPS)
endif
